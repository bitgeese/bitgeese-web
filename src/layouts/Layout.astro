---
import ThemeToggle from '../components/ThemeToggle.astro';
import { SEO } from "astro-seo";

export interface Props {
  title: string;
  description?: string;
  keywords?: string;
  image?: string;
  article?: boolean;
  publishedTime?: string;
  modifiedTime?: string;
  authors?: string[];
  section?: string;
  tags?: string[];
}

const { 
  title = "Bitgeese | Web3 Development", 
  description = "Professional Web3 development services and blockchain solutions", 
  keywords = "web3, blockchain, cryptocurrency, smart contracts, dApps, development, ethereum, bitcoin",
  image = "/og-image.png", // Default OG image path - you should create this file
  article = false,
  publishedTime,
  modifiedTime,
  authors,
  section,
  tags
} = Astro.props;

// Define social links here
const githubUrl = "https://github.com/bitgeese";
const twitterUrl = "https://x.com/MaciejJanowski";

// Build SEO configuration
const openGraphBasic = {
  title: title,
  type: article ? "article" : "website",
  image: new URL(image, Astro.site).toString(),
  url: Astro.url.href,
};

// Article specific props
const openGraphArticle = article ? {
  publishedTime: publishedTime,
  modifiedTime: modifiedTime,
  authors: authors,
  section: section,
  tags: tags
} : undefined;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <SEO
      title={title}
      description={description}
      canonical={Astro.url.href}
      openGraph={{
        basic: openGraphBasic,
        optional: {
          description: description,
          locale: "en_US",
          siteName: "Bitgeese",
        },
        article: openGraphArticle,
        image: {
          alt: `${title} - Bitgeese`,
        },
      }}
      twitter={{
        card: "summary_large_image",
        site: "@MaciejJanowski",
        creator: "@MaciejJanowski",
        title: title,
        description: description,
        image: new URL(image, Astro.site).toString(),
        imageAlt: `${title} - Bitgeese`,
      }}
      extend={{
        meta: [
          { name: "keywords", content: keywords },
          { name: "theme-color", content: "#ffffff" },
        ],
        link: [
          { rel: "sitemap", href: "/sitemap-index.xml" },
        ],
      }}
    />
    
    <!-- Prevent flash of unstyled content -->
    <script is:inline>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      if (localStorage.getItem('theme') === 'dark' || 
          (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    </script>
    
    <slot name="head" />
  </head>
  <body class="min-h-screen relative">
    <!-- Theme toggle positioned in the top right corner -->
    <div class="absolute top-4 right-4 z-10">
      <ThemeToggle />
    </div>

    <!-- Social links: top-left on mobile, bottom-left on desktop -->
    <div class="absolute top-4 left-4 sm:top-auto sm:bottom-4 flex items-center gap-x-3 z-10">
      <a 
        href={githubUrl}
        target="_blank"
        rel="noopener noreferrer"
        class="text-xs text-muted hover:text-foreground/80 transition-colors duration-200"
        aria-label="GitHub Profile"
      >
        gh
      </a>
      <span class="text-xs text-muted">/</span>
      <a 
        href={twitterUrl}
        target="_blank"
        rel="noopener noreferrer"
        class="text-xs text-muted hover:text-foreground/80 transition-colors duration-200"
        aria-label="X.com Profile"
      >
        x
      </a>
    </div>

    <!-- Main content area with padding handled by the layout -->
    <main class="flex min-h-screen flex-col items-center justify-center pt-16 pb-16 px-4 sm:pt-8 sm:pb-8 sm:px-8">
      <slot />
    </main>
  </body>
</html> 