---
import Layout from '../layouts/Layout.astro';

const screenSizes = [
  { name: 'Mobile Small', width: '320px', class: 'w-[320px]' },
  { name: 'Mobile Medium', width: '375px', class: 'w-[375px]' },
  { name: 'Mobile Large', width: '425px', class: 'w-[425px]' },
  { name: 'Tablet', width: '768px', class: 'w-[768px]' },
  { name: 'Laptop', width: '1024px', class: 'w-[1024px]' },
  { name: 'Desktop', width: '1440px', class: 'w-[1440px]' },
];
---

<Layout
  title="Responsive Design Test"
  description="Testing responsive design across different screen sizes"
>
  <div class="max-w-[1440px] w-full mx-auto p-4">
    <h1 class="text-3xl font-bold mb-8">Responsive Design Test</h1>

    <div class="space-y-8">
      <section>
        <h2 class="text-2xl font-semibold mb-4">Viewport Testing</h2>
        <p class="mb-6">
          This page provides visual tools for checking how your design responds to different screen
          sizes. Current viewport width: <span id="current-width" class="font-mono font-bold"
            >--</span
          >
        </p>

        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 mb-8">
          {
            screenSizes.map((size) => (
              <div class="border rounded p-4 text-center">
                <h3 class="font-semibold mb-2">{size.name}</h3>
                <p class="font-mono text-sm">{size.width}</p>
              </div>
            ))
          }
        </div>
      </section>

      <section>
        <h2 class="text-2xl font-semibold mb-4">Tailwind Breakpoints</h2>
        <div class="grid grid-cols-1 gap-4">
          <div class="p-4 border rounded">
            <div class="sm:hidden">
              <p class="font-semibold">Default (Mobile First)</p>
              <p>Viewport width: &lt; 640px</p>
            </div>
            <div class="hidden sm:block md:hidden">
              <p class="font-semibold">SM Breakpoint</p>
              <p>Viewport width: 640px - 767px</p>
            </div>
            <div class="hidden md:block lg:hidden">
              <p class="font-semibold">MD Breakpoint</p>
              <p>Viewport width: 768px - 1023px</p>
            </div>
            <div class="hidden lg:block xl:hidden">
              <p class="font-semibold">LG Breakpoint</p>
              <p>Viewport width: 1024px - 1279px</p>
            </div>
            <div class="hidden xl:block 2xl:hidden">
              <p class="font-semibold">XL Breakpoint</p>
              <p>Viewport width: 1280px - 1535px</p>
            </div>
            <div class="hidden 2xl:block">
              <p class="font-semibold">2XL Breakpoint</p>
              <p>Viewport width: 1536px+</p>
            </div>
          </div>
        </div>
      </section>

      <section>
        <h2 class="text-2xl font-semibold mb-4">Element Responsiveness Test</h2>

        <div class="space-y-6">
          <div>
            <h3 class="text-xl font-medium mb-2">Text Sizing</h3>
            <p class="text-xs">Extra Small (xs): The quick brown fox jumps over the lazy dog.</p>
            <p class="text-sm">Small (sm): The quick brown fox jumps over the lazy dog.</p>
            <p class="text-base">Base: The quick brown fox jumps over the lazy dog.</p>
            <p class="text-lg">Large (lg): The quick brown fox jumps over the lazy dog.</p>
            <p class="text-xl">Extra Large (xl): The quick brown fox jumps over the lazy dog.</p>
            <p class="text-2xl">2XL: The quick brown fox jumps over the lazy dog.</p>
            <p class="text-3xl">3XL: The quick brown fox jumps over the lazy dog.</p>
          </div>

          <div>
            <h3 class="text-xl font-medium mb-2">Grid Layout Test</h3>
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
              {
                Array.from({ length: 8 }).map((_, i) => (
                  <div class="p-4 bg-slate-100 dark:bg-slate-800 rounded">
                    <p class="font-semibold">Item {i + 1}</p>
                    <p class="text-sm">This item should reflow based on screen size.</p>
                  </div>
                ))
              }
            </div>
          </div>

          <div>
            <h3 class="text-xl font-medium mb-2">Flex Layout Test</h3>
            <div class="flex flex-col sm:flex-row gap-4 flex-wrap">
              <div class="p-4 bg-slate-100 dark:bg-slate-800 rounded flex-grow">Flex item 1</div>
              <div class="p-4 bg-slate-100 dark:bg-slate-800 rounded flex-grow">Flex item 2</div>
              <div class="p-4 bg-slate-100 dark:bg-slate-800 rounded flex-grow">Flex item 3</div>
            </div>
          </div>
        </div>
      </section>
    </div>
  </div>
</Layout>

<script>
  // Update current viewport width
  function updateViewportWidth() {
    const element = document.getElementById('current-width');
    if (element) {
      element.textContent = `${window.innerWidth}px`;
    }
  }

  // Initial update
  updateViewportWidth();

  // Update on resize
  window.addEventListener('resize', updateViewportWidth);
</script>
