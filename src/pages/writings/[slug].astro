---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import '../../styles/global.css';

// Navigation links - standardized across all pages
const links = [
  { name: 'writings', url: '/writings' },
  { name: 'projects', url: '/projects' },
  { name: 'linkedin', url: 'https://linkedin.com/in/maciej-janowski-57755a149/' },
];

// Removed social media links constants
const brandName = 'bitgeese';

export async function getStaticPaths() {
  const writings = await getCollection('writings');
  return writings.map((writing) => ({
    params: { slug: writing.slug },
    props: { writing },
  }));
}

type Props = {
  writing: CollectionEntry<'writings'>;
};

const { writing } = Astro.props;
const { Content } = await writing.render();
---

<Layout title={writing.data.title} description={writing.data.description}>
  <div class="w-full max-w-lg space-y-8">
    <!-- Navigation container -->
    <div class="text-center">
      <!-- Primary navigation -->
      <nav class="inline-flex flex-wrap items-center justify-center gap-x-4 gap-y-2 mb-8">
        <a href="/" class="text-lg font-semibold mr-2">{brandName}</a>
        <span class="text-muted">/</span>
        {
          links.map((link, index) => (
            <>
              <a
                href={link.url}
                rel={link.url.startsWith('/') ? undefined : 'noopener noreferrer'}
                target={link.url.startsWith('/') ? undefined : '_blank'}
                class="text-base underline hover:text-foreground/80 link-hover-lift-color"
              >
                {link.name}
              </a>
              {index < links.length - 1 && <span class="text-muted">/</span>}
            </>
          ))
        }
      </nav>
    </div>

    <article class="prose prose-slate dark:prose-invert max-w-none">
      <h1 class="text-2xl font-semibold mb-4">{writing.data.title}</h1>
      <div class="mb-6">
        <p class="text-sm text-muted">Published on {writing.data.pubDate.toDateString()}</p>
        {writing.data.author && <p class="text-sm text-muted">By {writing.data.author}</p>}
      </div>
      <Content />
    </article>
  </div>

  <!-- Load Motion One from CDN -->
  <script is:inline src="https://cdn.jsdelivr.net/npm/motion@latest/dist/motion.js"></script>

  <script is:inline>
    // Motion is available as a global variable when using the CDN version
    document.addEventListener('DOMContentLoaded', () => {
      Motion.animate(
        '.w-full.max-w-lg', // Target the inner div now
        { opacity: [0, 1], y: [5, 0] }, // Reduced y-offset for less pronounced movement
        { duration: 0.5, easing: 'ease-out', delay: 0.1 }
      );
    });
  </script>
</Layout>
